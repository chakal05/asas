import type { InferGetServerSidePropsType, NextPage } from 'next';
import Link from 'next/link';
import Image from 'next/image';
import Head from 'next/head';
import Search from '../components/search';
import { useAppSelector } from '../redux/hooks';
import { RootState } from '../redux/store';
import { ProductType } from '../interfaces/index';
import filter from '../features/filter';
import Categories from '../components/categories';
import { addProducts } from '../features/productsSlice';
import styled from 'styled-components';
import { useEffect, useState } from 'react';

const ImageWrap = styled.span`
	box-sizing: content-box;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	& > span {
	}
`;

const Posts = ({
	products,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
	// TODO Sort product according to btns
	const [data, setData] = useState(products);
	const { filters } = useAppSelector((state: RootState) => state.filters);
	// const { products } = useAppSelector((state: RootState) => state.produts);
	const filtered: ProductType[] = filter(data, { filters });

	// useEffect(() => {
	// 	addProducts(products)
	//  }, [])
	return (
		<div>
			<Head>
				<title> Sams - Products List </title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className=''>
				<Search
					submit={async (city) => {
						const res = await fetch(
							`http://localhost:3000/api/products/?city=${city}`
						);
						const products = await res.json();
						setData(products);
					}}
				/>
			</div>
			<div className=''>
				<Categories />
			</div>

			<div className='md:flex'>
				<div className='md:basis-4/5'>
					{filtered.map((item) => {
						return (
							<Link
								href={{
									pathname: `/productItem/`,
									query: {
										id: item._id,
									},
								}}
								passHref
								key={item._id}
							>
								<a>
									<div className='border-2 my-2 py-1 rounded shadow-lg hover:bg-slate-50  '>
										
										<div className='flex py-1 '>
											<div className='basis-1/5 '>
												<ImageWrap>
													<Image
														src={item.image}
														alt='sr'
														height={120}
														width={130}
													/>
												</ImageWrap>
											</div>
											<div className='basis-4/5 pl-5 '>
												<div className='grid grid-cols-2 '>
													<p className='text-sm sm:text-lg  text-slate-700'>
														{item.city}
													</p>
													<p className='text-right pr-3 text-sm sm:text-lg  text-slate-500'>
														{' '}
														{item.added}{' '}
													</p>
												</div>

												<p className='text-md sm:text-xl font-thin my-1 sm:my-3 no-underline hover:underline'>
													{item.title}
												</p>
												<p className='text-md sm:text-xl font-bold '>
													{' '}
													{item.price} ${' '}
												</p>
											</div>
										</div>
									</div>
								</a>
							</Link>
						);
					})}
				</div>

				<div className='hidden md:block md:basis-1/5 md:ml-3 p-2'>
					<ul className='border-2'>
						<p className='text-center font-bold text-3xl mb-3'> Latest </p>
						{filtered.map((product) => {
							return (
								<li key={product._id}>
									<div className='flex flex-col  justify-center items-center '>
										<ImageWrap>
											<Image
												src={product.image}
												alt='sr'
												height={100}
												width={100}
											/>
										</ImageWrap>
										<p className='text-center'> {product.title} </p>
										<p className='font-bold'> {product.price} </p>
									</div>
								</li>
							);
						})}
					</ul>
				</div>
			</div>
		</div>
	);
};

export const getServerSideProps = async (context) => {
	const { city } = context.query;
	const res = await fetch(`http://localhost:3000/api/products/?city=${city}`);
	const products = await res.json();

	return {
		props: { products },
	};
};

export default Posts;


//JSON.parse(JSON.stringify(res))