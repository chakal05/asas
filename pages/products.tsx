import { useState } from 'react';
import type { InferGetServerSidePropsType, NextPage } from 'next';
import Link from 'next/link';
import Image from 'next/image';
import Head from 'next/head';
import Search from '../components/search';
import { useAppSelector } from '../redux/hooks';
import { RootState } from '../redux/store';
import { ProductType } from '../interfaces/index';
import filter from '../store/filter';
import Categories from '../components/categories';
import { getByCity, getByCategory } from '../utils/productsApiCalls';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCar, faFaceSurprise } from '@fortawesome/free-solid-svg-icons';

const Posts = ({
	products,
	promoted,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
	const [data, setData] = useState(products);
	const { filters } = useAppSelector((state: RootState) => state.filters);
	const filtered = filter(data, { filters });

	return (
		<div>
			<Head>
				<title> Sams - Products List </title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className=''>
				<Search
					submit={async (city) => {
						const products = await getByCity(city);
						setData(products);
					}}
				/>
			</div>
			<div className=''>
				<Categories
					submitCategory={async (category) => {
						const products = await getByCategory(category);
						setData(products);
					}}
				/>
			</div>

			<div className='md:flex'>
				<div className='md:basis-4/5 px-2 md:px-0'>
					{filtered.map((item) => {
						return (
							<Link
								href={{
									pathname: `/productItem/`,
									query: {
										id: item._id,
									},
								}}
								passHref
								key={item._id}
							>
								<a>
									<div className='bg-white my-2 py-1 rounded shadow-lg hover:bg-slate-50  '>
										<div className='flex py-1 '>
											<div className='basis-1/5 '>
												<div className='relative w-32 h-32 mx-auto'>
													<Image src={item.images[0]} alt='sr' layout='fill' />
												</div>
											</div>
											<div className='basis-4/5 pl-5 '>
												<div className='grid grid-cols-2 '>
													<p className='text-sm sm:text-lg  text-slate-700'>
														{item.city}
													</p>
													<p className='text-right pr-3 text-sm sm:text-lg  text-slate-500'>
														{' '}
														{item.added}{' '}
													</p>
												</div>

												<p className='text-md sm:text-xl  my-1 sm:my-3 no-underline hover:underline'>
													{item.title}
												</p>
												<p className='text-lg sm:text-xl text-sky-900 font-bold '>
													{' '}
													{item.price} FDj{' '}
												</p>
											</div>
										</div>
									</div>
								</a>
							</Link>
						);
					})}
					{!filtered[0] && (
						<div className='text-center w-4/5 mx-auto px-2 py-6 bg-white shadow-lg rounded-lg border-2 mt-20 mb-40'>
							<div className=''>
								<div>
									<FontAwesomeIcon
										className='text-7xl text-sky-900'
										icon={faFaceSurprise}
									/>
									<p className='text-5xl font-bold my-6 text-sky-900'>
										No match Found{' '}
									</p>
									<p className='text-2xl text-slate-700'>
										There are no results that match your current filters. Try
										removing some of them to get better results.
									</p>
								</div>
							</div>
						</div>
					)}
				</div>

				<div className='hidden md:block md:basis-1/5 md:ml-3 p-2'>
					<ul className='bg-white divide-y rounded shadow-lg border-2 '>
						<p className='text-center font-bold text-xl mb-3 text-sky-900'>
							{' '}
							Promoted{' '}
						</p>
						{promoted.map((product) => {
							return (
								<li className='p-2' key={product._id}>
									<Link
										href={{
											pathname: `/productItem/`,
											query: {
												id: product._id,
											},
										}}
										passHref
									>
										<a>
											<div className='flex flex-col  justify-center items-center '>
												<div className=' relative w-36 h-36'>
													<Image
														src={product.images[0]}
														alt='sr'
														layout='fill'
													/>
												</div>
												<div className='text-center '>
													<p className='my-1'> {product.title} </p>
													<p className='font-bold text-lg text-sky-900'>
														{product.price} FDj{' '}
													</p>
												</div>
											</div>
										</a>
									</Link>
								</li>
							);
						})}
					</ul>
				</div>
			</div>
		</div>
	);
};

export const getServerSideProps = async (context) => {
	const { city, category } = context.query;
	let products;
	if (city) {
		products = await getByCity(city);
	}

	if (category) {
		products = await getByCategory(category);
	}

	const getPromo = await fetch(
		`http://localhost:3000/api/products/?promoted=${true}`
	);
	const promoted = await getPromo.json();
	return {
		props: { products, promoted },
	};
};

export default Posts;
