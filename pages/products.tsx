import { useState } from 'react';
import type { InferGetServerSidePropsType, NextPage } from 'next';
import Link from 'next/link';
import Image from 'next/image';
import Head from 'next/head';
import Search from '../components/search';
import ItemComponent from '../components/itemComponent'
import { useAppSelector, useAppDispatch } from '../redux/hooks';
import { RootState } from '../redux/store';
import { ProductType } from '../interfaces/index';
import filter from '../store/filter';
import Categories from '../components/categories';
import {
	getByCity,
	getByCategory,
	getPromoted,
} from '../utils/productsApiCalls';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faFaceSurprise } from '@fortawesome/free-solid-svg-icons';
import {
	filterByCategory,
	filterByCity,
	filterByText,
} from '../store/filtersSlice';


const Posts = ({
	products,
	promoted
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
	const [data, setData] = useState(products);
	const dispatch = useAppDispatch();
	const { filters } = useAppSelector((state: RootState) => state.filters);
	const filtered = filter(data, { filters });
	const { title, city } = filters;
	const [location, setLocation] = useState(city);
	const [queryString, setQueryString] = useState(title);

	return (
		<div>
			<Head>
				<title> Sams - Products List </title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className=''>
				<Search
					submit={async (passedCity, passedQuery) => {
						const productsByCity = await getByCity(passedCity);
						setData(productsByCity);
						setLocation(passedCity);
						setQueryString(passedQuery);

					}}
				/>
			</div>
			<div className=''>
				<Categories
					submitCategory={async (passedCategory) => {
						const productsByCategory = await getByCategory(
							passedCategory.toLowerCase()
						);
						dispatch(filterByText(''));
						setData(productsByCategory);
						setQueryString(passedCategory);
					}}
				/>
			</div>

			<div className='md:flex'>
				<div className='md:basis-4/5 px-2 '>
					<div className='p-2 mt-3 md:flex'>
						<p className='text-xl font-bold md:mr-3'>
							{location === 'All over Djibouti'
								? `${
										queryString ? ` "${queryString}" - ` : ''
								  } On sell throughout Djibouti`
								: `${
										queryString ? ` "${queryString}" - ` : ''
								  } On sell in ${city}`}
						</p>

						<p className='text-xl md:pt-[0.55px] text-slate-600'>
							{' '}
							{filtered.length} ads found{' '}
						</p>
					</div>
					<div>
						{filtered.map((item) => {
							return <ItemComponent key={item._id} product={item} />


						})}
						{!filtered[0] && (
							<div className='text-center w-4/5 mx-auto px-2 py-6 bg-white shadow-lg rounded-lg border-2 mt-20 mb-40'>
								<div className=''>
									<div>
										<FontAwesomeIcon
											className='text-7xl text-sky-900'
											icon={faFaceSurprise}
										/>
										<p className='text-3xl font-bold my-6 text-sky-900'>
											No {queryString} found in {location} !
										</p>
										<p className='text-xl text-slate-700'>
											There are no results that match your current filters. Try
											removing some of them to get better results.
										</p>
									</div>
								</div>
							</div>
						)}
					</div>
				</div>

				<div className='hidden md:block md:basis-1/5 md:ml-3 p-2'>
					<ul className='bg-white divide-y rounded shadow-lg border-2 '>
						<p className='text-center font-bold text-xl mb-3 text-sky-900'>
							{' '}
							Promoted{' '}
						</p>
						{promoted.map((product) => {
							return (
								<li className='p-2' key={product._id}>
									<Link
										href={{
											pathname: `/productItem/`,
											query: {
												id: product._id,
											},
										}}
										passHref
									>
										<a>
											<div className='flex flex-col  justify-center items-center '>
												<div className=' relative w-36 h-36'>
													<Image
														src={product.images[0]}
														alt='sr'
														layout='fill'
													/>
												</div>
												<div className='text-center '>
													<p className='my-1'> {product.title} </p>
													<p className='font-bold text-lg text-sky-900'>
														{product.price} FDj{' '}
													</p>
												</div>
											</div>
										</a>
									</Link>
								</li>
							);
						})}
					</ul>
				</div>
			</div>
		</div>
	);
};

export const getServerSideProps = async (context) => {
	const { city, category } = context.query;
	let products;
	if (city) {
		products = await getByCity(city);
	}

	if (category) {
		products = await getByCategory(category);
	}

	const promoted = await getPromoted();
	return {
		props: { products, promoted },
	};
};

export default Posts;
